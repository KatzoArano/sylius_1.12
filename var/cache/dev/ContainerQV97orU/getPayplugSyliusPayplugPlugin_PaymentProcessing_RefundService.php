<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPayplugSyliusPayplugPlugin_PaymentProcessing_RefundService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'payplug_sylius_payplug_plugin.payment_processing.refund' shared autowired service.
     *
     * @return \PayPlug\SyliusPayPlugPlugin\PaymentProcessing\RefundPaymentProcessor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/PaymentProcessing/PaymentProcessorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/PaymentProcessing/RefundPaymentProcessor.php';

        return $container->services['payplug_sylius_payplug_plugin.payment_processing.refund'] = new \PayPlug\SyliusPayPlugPlugin\PaymentProcessing\RefundPaymentProcessor(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->privates['monolog.logger.payum'] ?? self::getMonolog_Logger_PayumService($container)), ($container->services['translator'] ?? self::getTranslatorService($container)), ($container->services['sylius_refund.repository.refund_payment'] ?? self::getSyliusRefund_Repository_RefundPaymentService($container)), ($container->services['payplug.repository.payplug_refund_history'] ?? $container->load('getPayplug_Repository_PayplugRefundHistoryService')), ($container->privates['PayPlug\\SyliusPayPlugPlugin\\ApiClient\\PayPlugApiClientFactoryInterface'] ?? $container->load('getPayPlugApiClientFactoryInterfaceService')));
    }
}
