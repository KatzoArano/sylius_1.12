<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConsole_Command_PublicAlias_PayplugSyliusPayplugPlugin_Command_PaymentStateService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'console.command.public_alias.payplug_sylius_payplug_plugin.command.payment_state' shared autowired service.
     *
     * @return \PayPlug\SyliusPayPlugPlugin\Cli\UpdatePaymentStateCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/LockableTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/Cli/UpdatePaymentStateCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/Resolver/PaymentStateResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/Resolver/PaymentStateResolver.php';

        return $container->services['console.command.public_alias.payplug_sylius_payplug_plugin.command.payment_state'] = new \PayPlug\SyliusPayPlugPlugin\Cli\UpdatePaymentStateCommand(($container->services['payplug_sylius_payplug_plugin.repository.payment'] ?? $container->load('getPayplugSyliusPayplugPlugin_Repository_PaymentService')), new \PayPlug\SyliusPayPlugPlugin\Resolver\PaymentStateResolver(($container->services['SM\\Factory\\FactoryInterface'] ?? self::getFactoryInterfaceService($container)), ($container->services['payplug_sylius_payplug_plugin.api_client.payplug'] ?? $container->load('getPayplugSyliusPayplugPlugin_ApiClient_PayplugService')), ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container))), ($container->privates['monolog.logger.payum'] ?? self::getMonolog_Logger_PayumService($container)));
    }
}
