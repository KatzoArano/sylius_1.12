<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGenerateCreditMemoHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\RefundPlugin\CommandHandler\GenerateCreditMemoHandler' shared service.
     *
     * @return \Sylius\RefundPlugin\CommandHandler\GenerateCreditMemoHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/CommandHandler/GenerateCreditMemoHandler.php';

        $a = ($container->services['Sylius\\RefundPlugin\\Generator\\CreditMemoGeneratorInterface'] ?? $container->load('getCreditMemoGeneratorInterfaceService'));

        if (isset($container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'])) {
            return $container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'];
        }
        $b = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'])) {
            return $container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'];
        }
        $c = ($container->privates['debug.traced.sylius.event_bus'] ?? self::getDebug_Traced_Sylius_EventBusService($container));

        if (isset($container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'])) {
            return $container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'];
        }

        return $container->services['Sylius\\RefundPlugin\\CommandHandler\\GenerateCreditMemoHandler'] = new \Sylius\RefundPlugin\CommandHandler\GenerateCreditMemoHandler($a, $b, $c, ($container->services['sylius.repository.order'] ?? self::getSylius_Repository_OrderService($container)), true, ($container->services['Sylius\\RefundPlugin\\Resolver\\CreditMemoFileResolverInterface'] ?? $container->load('getCreditMemoFileResolverInterfaceService')));
    }
}
