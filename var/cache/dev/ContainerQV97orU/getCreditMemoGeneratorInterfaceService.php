<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreditMemoGeneratorInterfaceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\RefundPlugin\Generator\CreditMemoGeneratorInterface' shared service.
     *
     * @return \Sylius\RefundPlugin\Generator\CreditMemoGenerator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Generator/CreditMemoGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Generator/CreditMemoGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Generator/TaxItemsGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Generator/TaxItemsGenerator.php';

        $a = ($container->services['sylius_refund.factory.credit_memo'] ?? $container->load('getSyliusRefund_Factory_CreditMemoService'));

        if (isset($container->services['Sylius\\RefundPlugin\\Generator\\CreditMemoGeneratorInterface'])) {
            return $container->services['Sylius\\RefundPlugin\\Generator\\CreditMemoGeneratorInterface'];
        }

        return $container->services['Sylius\\RefundPlugin\\Generator\\CreditMemoGeneratorInterface'] = new \Sylius\RefundPlugin\Generator\CreditMemoGenerator(($container->services['Sylius\\RefundPlugin\\Converter\\LineItem\\LineItemsConverterInterface'] ?? $container->load('getLineItemsConverterInterfaceService')), ($container->services['Sylius\\RefundPlugin\\Generator\\TaxItemsGeneratorInterface'] ??= new \Sylius\RefundPlugin\Generator\TaxItemsGenerator()), $a, ($container->services['sylius_refund.factory.customer_billing_data'] ?? $container->load('getSyliusRefund_Factory_CustomerBillingDataService')), ($container->services['sylius_refund.factory.shop_billing_data'] ?? $container->load('getSyliusRefund_Factory_ShopBillingDataService')));
    }
}
