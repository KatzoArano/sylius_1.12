<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCompleteRefundPaymentActionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'PayPlug\SyliusPayPlugPlugin\Action\Admin\CompleteRefundPaymentAction' shared autowired service.
     *
     * @return \PayPlug\SyliusPayPlugPlugin\Action\Admin\CompleteRefundPaymentAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/Action/Admin/CompleteRefundPaymentAction.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Provider/RelatedPaymentIdProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Provider/DefaultRelatedPaymentIdProvider.php';

        return $container->services['PayPlug\\SyliusPayPlugPlugin\\Action\\Admin\\CompleteRefundPaymentAction'] = new \PayPlug\SyliusPayPlugPlugin\Action\Admin\CompleteRefundPaymentAction(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->services['sylius_refund.repository.refund_payment'] ?? self::getSyliusRefund_Repository_RefundPaymentService($container)), ($container->services['sylius.repository.order'] ?? self::getSylius_Repository_OrderService($container)), ($container->services['Sylius\\RefundPlugin\\StateResolver\\RefundPaymentCompletedStateApplierInterface'] ?? $container->load('getRefundPaymentCompletedStateApplierInterfaceService')), ($container->services['router'] ?? self::getRouterService($container)), ($container->privates['debug.traced.sylius.event_bus'] ?? self::getDebug_Traced_Sylius_EventBusService($container)), ($container->services['Sylius\\RefundPlugin\\Provider\\RelatedPaymentIdProviderInterface'] ??= new \Sylius\RefundPlugin\Provider\DefaultRelatedPaymentIdProvider()), ($container->services['translator'] ?? self::getTranslatorService($container)));
    }
}
