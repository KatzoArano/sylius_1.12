<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRefundPaymentProcessManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\RefundPlugin\ProcessManager\RefundPaymentProcessManager' shared service.
     *
     * @return \Sylius\RefundPlugin\ProcessManager\RefundPaymentProcessManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/ProcessManager/UnitsRefundedProcessStepInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/ProcessManager/RefundPaymentProcessManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Provider/RelatedPaymentIdProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Provider/DefaultRelatedPaymentIdProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Factory/RefundPaymentFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/refund-plugin/src/Factory/RefundPaymentFactory.php';

        $a = ($container->services['Sylius\\RefundPlugin\\StateResolver\\OrderFullyRefundedStateResolverInterface'] ?? $container->load('getOrderFullyRefundedStateResolverInterfaceService'));

        if (isset($container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'])) {
            return $container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'];
        }
        $b = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'])) {
            return $container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'];
        }
        $c = ($container->privates['debug.traced.sylius.event_bus'] ?? self::getDebug_Traced_Sylius_EventBusService($container));

        if (isset($container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'])) {
            return $container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'];
        }

        return $container->services['Sylius\\RefundPlugin\\ProcessManager\\RefundPaymentProcessManager'] = new \Sylius\RefundPlugin\ProcessManager\RefundPaymentProcessManager($a, ($container->services['Sylius\\RefundPlugin\\Provider\\RelatedPaymentIdProviderInterface'] ??= new \Sylius\RefundPlugin\Provider\DefaultRelatedPaymentIdProvider()), ($container->services['sylius_refund.factory.refund_payment'] ??= new \Sylius\RefundPlugin\Factory\RefundPaymentFactory('Sylius\\RefundPlugin\\Entity\\RefundPayment')), ($container->services['sylius.repository.order'] ?? self::getSylius_Repository_OrderService($container)), ($container->services['sylius.repository.payment_method'] ?? self::getSylius_Repository_PaymentMethodService($container)), $b, $c);
    }
}
