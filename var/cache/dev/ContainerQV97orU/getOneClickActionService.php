<?php

namespace ContainerQV97orU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOneClickActionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'PayPlug\SyliusPayPlugPlugin\Controller\OneClickAction' shared autowired service.
     *
     * @return \PayPlug\SyliusPayPlugPlugin\Controller\OneClickAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/payum/src/Payum/Core/GatewayAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/payum/src/Payum/Core/ApiAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/payum/payum/src/Payum/Core/GatewayAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/Action/Api/ApiAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/payplug/sylius-payplug-plugin/src/Controller/OneClickAction.php';

        $container->services['PayPlug\\SyliusPayPlugPlugin\\Controller\\OneClickAction'] = $instance = new \PayPlug\SyliusPayPlugPlugin\Controller\OneClickAction(($container->services['sylius.repository.payment'] ?? $container->load('getSylius_Repository_PaymentService')), ($container->services['payum'] ?? $container->load('getPayumService')), ($container->privates['PayPlug\\SyliusPayPlugPlugin\\ApiClient\\PayPlugApiClientFactory'] ?? self::getPayPlugApiClientFactoryService($container)));

        $instance->setContainer(($container->privates['.service_locator.lhzYNGm'] ?? $container->load('get_ServiceLocator_LhzYNGmService'))->withContext('PayPlug\\SyliusPayPlugPlugin\\Controller\\OneClickAction', $container));

        return $instance;
    }
}
