<?php

namespace ContainerUsxYfYU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRequestResetPasswordTokenHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\Bundle\ApiBundle\CommandHandler\Account\RequestResetPasswordTokenHandler' shared service.
     *
     * @return \Sylius\Bundle\ApiBundle\CommandHandler\Account\RequestResetPasswordTokenHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/CommandHandler/Account/RequestResetPasswordTokenHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/calendar/src/Provider/DateTimeProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/calendar/src/Provider/Calendar.php';

        $a = ($container->services['messenger.default_bus'] ?? self::getMessenger_DefaultBusService($container));

        if (isset($container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RequestResetPasswordTokenHandler'])) {
            return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RequestResetPasswordTokenHandler'];
        }

        return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RequestResetPasswordTokenHandler'] = new \Sylius\Bundle\ApiBundle\CommandHandler\Account\RequestResetPasswordTokenHandler(($container->services['sylius.repository.shop_user'] ?? $container->load('getSylius_Repository_ShopUserService')), $a, ($container->services['sylius.shop_user.token_generator.password_reset'] ?? $container->load('getSylius_ShopUser_TokenGenerator_PasswordResetService')), ($container->privates['Sylius\\Calendar\\Provider\\DateTimeProviderInterface'] ??= new \Sylius\Calendar\Provider\Calendar()));
    }
}
