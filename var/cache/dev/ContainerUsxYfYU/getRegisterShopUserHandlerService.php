<?php

namespace ContainerUsxYfYU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRegisterShopUserHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Sylius\Bundle\ApiBundle\CommandHandler\Account\RegisterShopUserHandler' shared service.
     *
     * @return \Sylius\Bundle\ApiBundle\CommandHandler\Account\RegisterShopUserHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/CommandHandler/Account/RegisterShopUserHandler.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RegisterShopUserHandler'])) {
            return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RegisterShopUserHandler'];
        }
        $b = ($container->services['messenger.default_bus'] ?? self::getMessenger_DefaultBusService($container));

        if (isset($container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RegisterShopUserHandler'])) {
            return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RegisterShopUserHandler'];
        }

        return $container->services['Sylius\\Bundle\\ApiBundle\\CommandHandler\\Account\\RegisterShopUserHandler'] = new \Sylius\Bundle\ApiBundle\CommandHandler\Account\RegisterShopUserHandler(($container->services['sylius.factory.shop_user'] ?? $container->load('getSylius_Factory_ShopUserService')), $a, ($container->services['Sylius\\Bundle\\CoreBundle\\Resolver\\CustomerResolverInterface'] ?? $container->load('getCustomerResolverInterfaceService')), ($container->services['sylius.repository.channel'] ?? self::getSylius_Repository_ChannelService($container)), ($container->services['sylius.shop_user.token_generator.email_verification'] ?? $container->load('getSylius_ShopUser_TokenGenerator_EmailVerificationService')), $b);
    }
}
